apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.squareup.leakcanary.deobfuscation'

apply from: '../shared_dependencies.gradle'

android {
  compileSdkVersion 30
  buildToolsVersion '30.0.3'

  defaultConfig {
    applicationId "id.ergun.mymoviedb"
    minSdkVersion 21
    targetSdkVersion 30
    versionCode 1
    versionName "1.0"

    buildConfigField("String" , "IMAGE_URL" , '"https://image.tmdb.org/t/p/w185"')

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true

  }

  lintOptions {
    disable "ObsoleteLintCustomCheck"
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    debug {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  buildFeatures {
    viewBinding true
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }

  testOptions {
    unitTests.includeAndroidResources = true
    unitTests.returnDefaultValues = true
  }

  dynamicFeatures = [':favorite']
}

dependencies {
  implementation project(":core")
  implementation fileTree(dir: "libs", include: ["*.jar"])

  debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

  //ui
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$arch_lifecycle_version"

}

leakCanary {
  // LeakCanary needs to know which variants have obfuscation turned on
  filterObfuscatedVariants { variant ->
    variant.name == "debug"
  }
}